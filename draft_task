#include <iostream>
#include <algorithm>
#include <thread>
#include <string>
#include <cmath>
#include <fstream>
#include <sstream>




using namespace std;



class Task
{
       private:

    std :: string numbers;
    ofstream filestr = ofstream("test.txt");


       public:

           struct find_greater
           {

               template<class T>
               bool operator()(T const& a, T const& b) const { return a > b; }


           };


   void replacing_num(std::string Input_string_Ft)
    {
       std :: string new_numbers;
       new_numbers.resize(1); 
       std :: string kb = "KB";

       new_numbers[0] = numbers[0]; // приравниваем первые строки, чтобы не было изменений

       int i = 0; //строка new_numbers
       int j = 0; // строка numbers
       for (int k = 0; k < Input_string_Ft.length(); k++)
       {
           if ((k + 1) % 2 == 0)
           {
               new_numbers.insert(i, kb);
               i++; //  добавляем первый символ
               i++; // добавляем первый символ второй раз, т.к он двухзначный
               j++; // увеличиваем индекс
               
           }
           else
           {
               new_numbers.insert(i++, numbers, j++, 1); // иначе вставляем неподходящие цифры
           }

       }

 
       numbers = new_numbers;

       
       /* const char* y = "KB";


         std::replace(Input_string_Ft.begin(), Input_string_Ft.end(), x, y);

        for (int i = 0; i < Input_string_Ft.size(); i++)
        {
            if (Input_string_Ft[i] % 2 == 0)
            {
                //Input_string_Ft[i] = y[0] + y[1];
                Input_string_Ft[i] = y[0];
                Input_string_Ft[i] += y[1];
            }
            cout << Input_string_Ft[i] << "\t";
        }

        return Input_string_Ft;
       */
    }

  
    void string_num_check(std::string Input_string_Ft)
    {
        int result = 0; // if result > 1, find error;

        if (Input_string_Ft.size() > 64)
        {
            result++;
            cout << "Размер больше 64 символов";
        }
        for (int i = 0; i < Input_string_Ft.size(); i++)
        {
            if (isdigit(Input_string_Ft[i]))
            {
                continue;
                //cout<<numbers[i];
            }
            else
            {
                cout << "\nСтрока должна состоять только из цифр.\n";
                result = 1;
                break;
            }
        }
    }

    void FirstThread()
    {
        

        std::cout << "Начало работы первого потока: " << endl;
              
    }

   
   
   /* std::string SecondThread()
    {
        /*Поток должен вывести полученные данные на экран,
        рассчитать общую сумму всех элементов , которые являются численными значениями.
        Полученную сумму передать в Программу №2*/

        //return;

      

       
   };


int main()

{
    setlocale(LC_ALL, "Russian");
    char* buffer = new char[256];
    string Input_string_Ft;
    Task task;
    
    std::cout << "Введите строку, которая состоит только из цифр и не превышает 64 символа: ";
    std::cin >> Input_string_Ft;
    task.string_num_check(Input_string_Ft);
    task.replacing_num(Input_string_Ft);

    
   
    //  Должна быть проверка, что строка состоит только из цифр и не превышает 64 символа. 
                              //  вызываем проверку на исключительность цифр в string



    /*После данная строка помещается в общий буфер
    и поток должен ожидать дальнейшего ввода пользователя.*/



    delete[] buffer;
    return 0;
}
   
